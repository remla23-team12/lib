name: Release
on:
  push:
    branches:
      - main
    paths:
      - 'README.md'
jobs:
  update_version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.update.outputs.new_version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - id: update
        name: Update version
        run: |
          VERSION=$(grep -oP '(?<=Release )\d+\.\d+\.\d+' README.md)
          echo "Current version is $(grep '__version__' __init__.py)"

          IFS='.' read -ra VERSION_PARTS <<< "$VERSION"

          NEW_VERSION=$(IFS=. ; echo "${VERSION_PARTS[*]}")
          echo "New version is $NEW_VERSION"

  build_and_publish:
    needs: update_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          # Build package
          python setup.py sdist bdist_wheel
          
          # Publish package
          twine upload dist/*
  create_release:
    needs: [update_version, build_and_publish]
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: ${{ needs.update_version.outputs.new_version  }}
          release_name: Release ${{ needs.update_version.outputs.new_version  }}
          draft: false
          prerelease: false
